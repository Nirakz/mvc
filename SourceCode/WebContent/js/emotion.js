//string contain func javascriptString.prototype.contains = function(it) { return this.indexOf(it) != -1; };function placeCaretAtEnd(el) {    el.focus();    if (typeof window.getSelection != "undefined"            && typeof document.createRange != "undefined") {        var range = document.createRange();        range.selectNodeContents(el);        range.collapse(false);        var sel = window.getSelection();        sel.removeAllRanges();        sel.addRange(range);    } else if (typeof document.body.createTextRange != "undefined") {        var textRange = document.body.createTextRange();        textRange.moveToElementText(el);        textRange.collapse(false);        textRange.select();    }}//insert html at cursor positionfunction pasteHtmlAtCaret(html) {    var sel, range;    if (window.getSelection) {        // IE9 and non-IE        sel = window.getSelection();        if (sel.getRangeAt && sel.rangeCount) {            range = sel.getRangeAt(0);            range.deleteContents();            // Range.createContextualFragment() would be useful here but is            // non-standard and not supported in all browsers (IE9, for one)            var el = document.createElement("div");            el.innerHTML = html;            var frag = document.createDocumentFragment(), node, lastNode;            while ( (node = el.firstChild) ) {                lastNode = frag.appendChild(node);            }            range.insertNode(frag);            // Preserve the selection            if (lastNode) {                range = range.cloneRange();                range.setStartAfter(lastNode);                range.collapse(true);                sel.removeAllRanges();                sel.addRange(range);                                          }        }    } else if (document.selection && document.selection.type != "Control") {        // IE < 9        document.selection.createRange().pasteHTML(html);    }}function isOrContains(node, container) {    while (node) {        if (node === container) {            return true;        }        node = node.parentNode;    }    return false;}//check whether the selection is in a elementfunction elementContainsSelection(el) {    var sel;    if (window.getSelection) {        sel = window.getSelection();        if (sel.rangeCount > 0) {            for (var i = 0; i < sel.rangeCount; ++i) {                if (!isOrContains(sel.getRangeAt(i).commonAncestorContainer, el)) {                    return false;                }            }            return true;        }    } else if ( (sel = document.selection) && sel.type != "Control") {        return isOrContains(sel.createRange().parentElement(), el);    }    return false;}function processInputEmotion(idTo){	var t = $("#txt_" + idTo);	var inputText = t.html();	var size = inputText.length;	console.log("chie ruong la " + inputText.length);	var replace = false;	if (inputText == ':)&nbsp;'		    ||inputText == ':) <br>'			|| inputText.contains(" :)&nbsp;")			|| inputText.contains("&nbsp;:)&nbsp;")			|| inputText.contains(" :) ")) {		var smileDiv1 = '&nbsp;<div style="display:inline-block;" contenteditable="false" class="e1f603 vm">&nbsp;</div>';		if (size == 8)			inputText = inputText.replace(':)&nbsp;',					smileDiv1);		else if(size==7)			inputText = inputText.replace(':) <br>',					smileDiv1);		else {			inputText = inputText.replace(' :)&nbsp;',					smileDiv1);			inputText = inputText.replace(					'&nbsp;:)&nbsp;', smileDiv1);			inputText = inputText.replace(' :) ',					smileDiv1);		}		replace = true;	}	if (inputText == ':(&nbsp;'		    || inputText==':( <br>'			|| inputText.contains(" :(&nbsp;")			|| inputText.contains("&nbsp;:(&nbsp;")			|| inputText.contains(" :( ")) {		var smileDiv2 = '&nbsp;<div style="display:inline-block;" contenteditable="false" class="e1f61e vm">&nbsp;</div>';		if (size == 8)			inputText = inputText.replace(':(&nbsp;',					smileDiv2);		else if(size==7)			inputText = inputText.replace(':( <br>',					smileDiv2);		else {			inputText = inputText.replace(' :(&nbsp;',					smileDiv2);			inputText = inputText.replace(					'&nbsp;:(&nbsp;', smileDiv2);			inputText = inputText.replace(' :( ',					smileDiv2);		}		replace = true;	}	if (inputText == ':P&nbsp;'			|| inputText==':P <br>'			|| inputText.contains(" :P&nbsp;")			|| inputText.contains("&nbsp;:P&nbsp;")			|| inputText.contains(" :P ")) {		var smileDiv3 = '&nbsp;<div style="display:inline-block;" contenteditable="false" class="e1f61b vm">&nbsp;</div>';		if (size == 8)			inputText = inputText.replace(':P&nbsp;',					smileDiv3);		else if(size==7)			inputText = inputText.replace(':P <br>',					smileDiv3);		else {			inputText = inputText.replace(' :P&nbsp;',					smileDiv3);			inputText = inputText.replace(					'&nbsp;:P&nbsp;', smileDiv3);			inputText = inputText.replace(' :P ',					smileDiv3);		}		replace = true;	}	if (inputText == ':|&nbsp;'			|| inputText==':| <br>'			|| inputText.contains(" :|&nbsp;")			|| inputText.contains("&nbsp;:|&nbsp;")			|| inputText.contains(" :| ")) {		var smileDiv4 = '&nbsp;<div style="display:inline-block;" contenteditable="false" class="e1f610 vm">&nbsp;</div>';		if (size == 8)			inputText = inputText.replace(':|&nbsp;',					smileDiv4);		else if(size==7)			inputText = inputText.replace(':| <br>',					smileDiv4);		else {			inputText = inputText.replace(' :|&nbsp;',					smileDiv4);			inputText = inputText.replace(					'&nbsp;:|&nbsp;', smileDiv4);			inputText = inputText.replace(' :| ',					smileDiv4);		}		replace = true;	}	if (inputText == ':D&nbsp;'			|| inputText == ':D <br>'			|| inputText.contains(" :D&nbsp;")			|| inputText.contains("&nbsp;:D&nbsp;")			|| inputText.contains(" :D ")) {		var smileDiv5 = '&nbsp;<div style="display:inline-block;" contenteditable="false" class="e1f600 vm">&nbsp;</div>';		if (size == 8)			inputText = inputText.replace(':D&nbsp;',					smileDiv5);		else if(size==7)			inputText = inputText.replace(':D <br>',					smileDiv5);		else {			inputText = inputText.replace(' :D&nbsp;',					smileDiv5);			inputText = inputText.replace(					'&nbsp;:D&nbsp;', smileDiv5);			inputText = inputText.replace(' :D ',					smileDiv5);		}		replace = true;	}	console.log(" moi la " + inputText);	if (replace == true) {		if ($.browser.mozilla) {		   inputText = inputText.replace(/<br>/g,"");		   inputText +="&nbsp;"		}				t.html(inputText);		placeCaretAtEnd(document.getElementById("txt_"				+ idTo));		pasteHtmlAtCaret("&nbsp;");	}	}